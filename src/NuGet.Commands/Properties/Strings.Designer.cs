// <auto-generated />
namespace NuGet.Commands
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Strings
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("NuGet.Commands.Strings", typeof(Strings).GetTypeInfo().Assembly);

        /// <summary>
        /// Packages containing MSBuild targets and props files cannot be fully installed in projects targeting multiple frameworks. The MSBuild targets and props files have been ignored.
        /// </summary>
        internal static string MSBuildWarning_MultiTarget
        {
            get { return GetString("MSBuildWarning_MultiTarget"); }
        }

        /// <summary>
        /// Packages containing MSBuild targets and props files cannot be fully installed in projects targeting multiple frameworks. The MSBuild targets and props files have been ignored.
        /// </summary>
        internal static string FormatMSBuildWarning_MultiTarget()
        {
            return GetString("MSBuildWarning_MultiTarget");
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
