parameters:
  - name: DartLabEnvironment
    displayName: DartLab Environment
    type: string
    default: Production
    values:
      - Production
      - Staging

resources:
  pipelines:
    - pipeline: DartLab
      source: DartLab
      branch: main
  repositories:
    - repository: DartLabTemplates
      type: git
      name: DartLab.Templates
      ref: refs/heads/main

variables:
  DOTNET_NOLOGO: 1

stages:
  - stage: Initialize
    jobs:
      - job: GetSemanticVersion
        displayName: Get NuGet.Client semantic version
        timeoutInMinutes: 10
        pool:
          vmImage: windows-latest
        steps:
          - template: Initialize_Build_SemanticVersion.yml

      - job: Initialize_Build
        dependsOn: GetSemanticVersion
        timeoutInMinutes: 10
        variables:
          SemanticVersion: $[dependencies.GetSemanticVersion.outputs['setsemanticversion.SemanticVersion']]
          BuildRevision: $[counter(format('{0}.{1}', variables['SemanticVersion'], variables['build.definitionname']), 1)]
        pool:
          vmImage: windows-latest
        steps:
          - template: Initialize_Build.yml

  - stage: Build_Insertable
    displayName: Build NuGet inserted into VS and .NET SDK
    dependsOn: Initialize
    jobs:
      - job: Build_and_UnitTest_NonRTM
        timeoutInMinutes: 170
        variables:
          BuildNumber: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.BuildNumber']]
          FullVstsBuildNumber: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.FullVstsBuildNumber']]
          VsTargetChannel: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.VsTargetChannel']]
          VsTargetMajorVersion: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.VsTargetMajorVersion']]
          SDKVersionForBuild: $[stageDependencies.Initialize.Initialize_Build.outputs['getSDKVersionForBuild.SDKVersionForBuild']]
          LocalizedLanguageCount: "13"
          BuildRTM: "false"
        pool:
          name: VSEngSS-MicroBuild2019
        steps:
          - template: Build_and_UnitTest.yml

  - stage: Apex_Tests_On_Windows.yml
    parameters:
      stageName: VS_ApexTests
      condition: "and(succeeded(), eq(variables['RunApexTests'], 'true'))"
      dependsOn:
        - Initialize
        - Build_Insertable
      testMachineConfigurationJobName: Configure_VM_ApexTests
      testMachineDeploymentJobName: Deploy_VM_ApexTests
      testExecutionJobName: RunApexTests
      testMachineCleanUpJobName: Cleanup_VM_ApexTests
      testExecutionJobTimeoutInMinutes: 100
      bootstrapperUrl:
      runSettingsURI:
      DartLabEnvironment: ${{parameters.DartLabEnvironment}}
      variables:
        - name: FullVstsBuildNumber
          value: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.FullVstsBuildNumber']]
        - name: SDKVersionForBuild
          value: $[stageDependencies.Initialize.Initialize_Build.outputs['getSDKVersionForBuild.SDKVersionForBuild']]
        - name: BuildNumber
          value: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.BuildNumber']]
